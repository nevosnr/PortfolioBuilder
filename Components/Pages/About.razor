@using Microsoft.EntityFrameworkCore
@using PortfolioBuilder.Components
@using PortfolioBuilder.Data
@using PortfolioBuilder.Data.DTOs.CareerDTOs

@inject IDbContextFactory<PortfolioDbContext> DbContextFactory

@page "/about"

<PageTitle>All about Dave Neve</PageTitle>

<MudText Align="Align.Center" Typo="Typo.h4">Everything You Need to Know About Dave Neve</MudText>
<MudGrid>
	<MudItem xs="12">
		<MudTimeline>
			@foreach (var career in _careerRecordDTOs)
			{
				<MudTimelineItem Color="Color.Warning" Size="Size.Medium" Elevation="25">
					<ItemOpposite>
						<MudGrid Class="pa-5">
							<MudIcon Color="Color.Default" Icon="@career._careerIcon"/>
							<MudText Color="Color.Error" Typo="Typo.h5">@career._careerStartDate.ToString("MMM yyyy")</MudText>
						</MudGrid>
					</ItemOpposite>
					<ItemContent>
						<CareerCard 
							_careerJobTitle="@(career._careerJobTitle)" 
							_careerRoleTitle="@(career._careerRoleTitle)" 
							_careerShortDescription="@(career._careerShortDescription)" />
					</ItemContent>
				</MudTimelineItem>
			}
		</MudTimeline>
	</MudItem>
</MudGrid>


@code {

	private List<CareerRecordDTO> _careerRecordDTOs = new();
	private PortfolioDbContext _ctx = default!;

	protected override async Task OnInitializedAsync()
	{
		await using var _ctx = DbContextFactory.CreateDbContext();

		_careerRecordDTOs = await _ctx.CareerRecords
			.AsNoTracking()
			.OrderByDescending(c => c.careerStateDate)
			.Select(c => new CareerRecordDTO
			{
				_Id = c.Id,
				_careerJobTitle = c.careerJobTitle,
				_careerRoleTitle = c.careerRoleTitle,
				_careerShortDescription = c.careerShortDescription,
				_careerStartDate = c.careerStateDate,
				_careerEndDate = c.careerEndDate,
				_careerLongDescription = c.careerLongDescription
			})
			.ToListAsync();
	}
}